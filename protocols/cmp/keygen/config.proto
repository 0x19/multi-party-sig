syntax = "proto3";

package keygen;

option go_package = "github.com/taurusgroup/cmp-ecdsa/protocol/keygen";

option (gogoproto.stable_marshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// Secret holds secret information for a party
message Secret {
  string ID = 1 [(gogoproto.casttype) = "github.com/taurusgroup/cmp-ecdsa/pkg/party.ID"];
  // ECDSA is a party's share x·µ¢ of the secret ECDSA x
  bytes ECDSA = 2 [(gogoproto.customtype) = "github.com/taurusgroup/cmp-ecdsa/pkg/math/curve.Scalar"];
  // P, Q is the primes for N = P*Q used by Paillier and Pedersen
  bytes P = 3 [(gogoproto.customtype) = "github.com/taurusgroup/cmp-ecdsa/internal/proto.NatMarshaller"];
  bytes Q = 4 [(gogoproto.customtype) = "github.com/taurusgroup/cmp-ecdsa/internal/proto.NatMarshaller"];
}

// Public holds public information for a party
message Public {
  // ECDSA public key share
  bytes ECDSA = 1 [(gogoproto.customtype) = "github.com/taurusgroup/cmp-ecdsa/pkg/math/curve.Point"];
  // N = p‚Ä¢q, p ‚â° q ‚â° 3 mod 4
  bytes N = 3 [(gogoproto.casttypewith) = "math/big.Int;github.com/taurusgroup/cmp-ecdsa/internal/proto.IntCaster"];
  // S = r¬≤ mod N
  bytes S = 4 [(gogoproto.casttypewith) = "math/big.Int;github.com/taurusgroup/cmp-ecdsa/internal/proto.IntCaster"];
  // T = SÀ° mod N
  bytes T = 5 [(gogoproto.casttypewith) = "math/big.Int;github.com/taurusgroup/cmp-ecdsa/internal/proto.IntCaster"];
}

// Config represents the SSID after having performed a keygen/refresh operation.
// It represents ssid = (sid, (N‚ÇÅ, s‚ÇÅ, t‚ÇÅ), ‚Ä¶, (N‚Çô, s‚Çô, t‚Çô))
// where sid = (ùîæ, t, n, P‚ÇÅ, ‚Ä¶, P‚Çô).
message Config {
  // Threshold is the integer t which defines the maximum number of corruptions tolerated for this config.
  // Threshold + 1 is the minimum number of parties' shares required to reconstruct the secret/sign a message.
  int32 threshold = 1;

  // Public maps party.ID to party. It contains all public information associated to a party.
  map<string, Public> public = 2 [(gogoproto.castkey) = "github.com/taurusgroup/cmp-ecdsa/pkg/party.ID"];

  // RID is a 32 byte random identifier generated for this config
  bytes RID = 3 [(gogoproto.casttype) = "RID"];

  Secret Secret = 4 [(gogoproto.embed) = true];
}