// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: message.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_TypeInvalid  MessageType = 0
	MessageType_TypeRefresh1 MessageType = 11
	MessageType_TypeRefresh2 MessageType = 12
	MessageType_TypeRefresh3 MessageType = 13
	MessageType_TypeRefresh4 MessageType = 14
	MessageType_TypeSign1    MessageType = 21
	MessageType_TypeSign2    MessageType = 22
	MessageType_TypeSign3    MessageType = 23
	MessageType_TypeSign4    MessageType = 24
	MessageType_TypeAbort1   MessageType = 31
	MessageType_TypeAbort2   MessageType = 32
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "TypeInvalid",
		11: "TypeRefresh1",
		12: "TypeRefresh2",
		13: "TypeRefresh3",
		14: "TypeRefresh4",
		21: "TypeSign1",
		22: "TypeSign2",
		23: "TypeSign3",
		24: "TypeSign4",
		31: "TypeAbort1",
		32: "TypeAbort2",
	}
	MessageType_value = map[string]int32{
		"TypeInvalid":  0,
		"TypeRefresh1": 11,
		"TypeRefresh2": 12,
		"TypeRefresh3": 13,
		"TypeRefresh4": 14,
		"TypeSign1":    21,
		"TypeSign2":    22,
		"TypeSign3":    23,
		"TypeSign4":    24,
		"TypeAbort1":   31,
		"TypeAbort2":   32,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

type Broadcast int32

const (
	Broadcast_None     Broadcast = 0
	Broadcast_Basic    Broadcast = 1
	Broadcast_Reliable Broadcast = 2
)

// Enum value maps for Broadcast.
var (
	Broadcast_name = map[int32]string{
		0: "None",
		1: "Basic",
		2: "Reliable",
	}
	Broadcast_value = map[string]int32{
		"None":     0,
		"Basic":    1,
		"Reliable": 2,
	}
)

func (x Broadcast) Enum() *Broadcast {
	p := new(Broadcast)
	*p = x
	return p
}

func (x Broadcast) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Broadcast) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[1].Descriptor()
}

func (Broadcast) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[1]
}

func (x Broadcast) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Broadcast.Descriptor instead.
func (Broadcast) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      MessageType `protobuf:"varint,1,opt,name=type,proto3,enum=pb.MessageType" json:"type,omitempty"`
	From      string      `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To        string      `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Broadcast Broadcast   `protobuf:"varint,4,opt,name=broadcast,proto3,enum=pb.Broadcast" json:"broadcast,omitempty"`
	Refresh1  *Refresh1   `protobuf:"bytes,11,opt,name=refresh1,proto3" json:"refresh1,omitempty"`
	Refresh2  *Refresh2   `protobuf:"bytes,12,opt,name=refresh2,proto3" json:"refresh2,omitempty"`
	Refresh3  *Refresh3   `protobuf:"bytes,13,opt,name=refresh3,proto3" json:"refresh3,omitempty"`
	Refresh4  *Refresh4   `protobuf:"bytes,14,opt,name=refresh4,proto3" json:"refresh4,omitempty"`
	Sign1     *Sign1      `protobuf:"bytes,21,opt,name=sign1,proto3" json:"sign1,omitempty"`
	Sign2     *Sign2      `protobuf:"bytes,22,opt,name=sign2,proto3" json:"sign2,omitempty"`
	Sign3     *Sign3      `protobuf:"bytes,23,opt,name=sign3,proto3" json:"sign3,omitempty"`
	Sign4     *Sign4      `protobuf:"bytes,24,opt,name=sign4,proto3" json:"sign4,omitempty"`
	Abort1    *Abort1     `protobuf:"bytes,31,opt,name=abort1,proto3" json:"abort1,omitempty"`
	Abort2    *Abort2     `protobuf:"bytes,32,opt,name=abort2,proto3" json:"abort2,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_TypeInvalid
}

func (x *Message) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Message) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Message) GetBroadcast() Broadcast {
	if x != nil {
		return x.Broadcast
	}
	return Broadcast_None
}

func (x *Message) GetRefresh1() *Refresh1 {
	if x != nil {
		return x.Refresh1
	}
	return nil
}

func (x *Message) GetRefresh2() *Refresh2 {
	if x != nil {
		return x.Refresh2
	}
	return nil
}

func (x *Message) GetRefresh3() *Refresh3 {
	if x != nil {
		return x.Refresh3
	}
	return nil
}

func (x *Message) GetRefresh4() *Refresh4 {
	if x != nil {
		return x.Refresh4
	}
	return nil
}

func (x *Message) GetSign1() *Sign1 {
	if x != nil {
		return x.Sign1
	}
	return nil
}

func (x *Message) GetSign2() *Sign2 {
	if x != nil {
		return x.Sign2
	}
	return nil
}

func (x *Message) GetSign3() *Sign3 {
	if x != nil {
		return x.Sign3
	}
	return nil
}

func (x *Message) GetSign4() *Sign4 {
	if x != nil {
		return x.Sign4
	}
	return nil
}

func (x *Message) GetAbort1() *Abort1 {
	if x != nil {
		return x.Abort1
	}
	return nil
}

func (x *Message) GetAbort2() *Abort2 {
	if x != nil {
		return x.Abort2
	}
	return nil
}

type Refresh1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hash = V_i = H(rho_i, F_i(X), {A_i,l}, N_i, s_i, t_i, u_i)
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *Refresh1) Reset() {
	*x = Refresh1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Refresh1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refresh1) ProtoMessage() {}

func (x *Refresh1) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refresh1.ProtoReflect.Descriptor instead.
func (*Refresh1) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *Refresh1) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type Refresh2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hashOfHashes = H(V_1, ..., V_n)
	// This is essentially an echo of all messages from Refresh1.
	// If one party received something different then everybody must abort.
	HashOfHashes []byte `protobuf:"bytes,1,opt,name=hashOfHashes,proto3" json:"hashOfHashes,omitempty"`
}

func (x *Refresh2) Reset() {
	*x = Refresh2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Refresh2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refresh2) ProtoMessage() {}

func (x *Refresh2) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refresh2.ProtoReflect.Descriptor instead.
func (*Refresh2) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *Refresh2) GetHashOfHashes() []byte {
	if x != nil {
		return x.HashOfHashes
	}
	return nil
}

type Refresh3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// rho = rho_i
	Rho []byte `protobuf:"bytes,1,opt,name=rho,proto3" json:"rho,omitempty"`
	// f = F_i(X) VSS polynomial
	F *PolynomialExponent `protobuf:"bytes,2,opt,name=f,proto3" json:"f,omitempty"`
	// A = {A_i,l}_l Schnorr commitments for the coefficients of F_i
	A []*Point `protobuf:"bytes,3,rep,name=A,proto3" json:"A,omitempty"`
	// N Paillier and Pedersen
	N *Int `protobuf:"bytes,4,opt,name=N,proto3" json:"N,omitempty"`
	// S Pedersen
	S *Int `protobuf:"bytes,5,opt,name=S,proto3" json:"S,omitempty"`
	// T Pedersen
	T *Int `protobuf:"bytes,6,opt,name=T,proto3" json:"T,omitempty"`
	// U decommitment bytes
	U []byte `protobuf:"bytes,7,opt,name=u,proto3" json:"u,omitempty"`
}

func (x *Refresh3) Reset() {
	*x = Refresh3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Refresh3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refresh3) ProtoMessage() {}

func (x *Refresh3) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refresh3.ProtoReflect.Descriptor instead.
func (*Refresh3) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *Refresh3) GetRho() []byte {
	if x != nil {
		return x.Rho
	}
	return nil
}

func (x *Refresh3) GetF() *PolynomialExponent {
	if x != nil {
		return x.F
	}
	return nil
}

func (x *Refresh3) GetA() []*Point {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *Refresh3) GetN() *Int {
	if x != nil {
		return x.N
	}
	return nil
}

func (x *Refresh3) GetS() *Int {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *Refresh3) GetT() *Int {
	if x != nil {
		return x.T
	}
	return nil
}

func (x *Refresh3) GetU() []byte {
	if x != nil {
		return x.U
	}
	return nil
}

type Refresh4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mod *ZKMod `protobuf:"bytes,1,opt,name=mod,proto3" json:"mod,omitempty"`
	Prm *ZKPrm `protobuf:"bytes,2,opt,name=prm,proto3" json:"prm,omitempty"`
	// c = Enc_i(x) is the encryption of the receivers share
	C *Ciphertext `protobuf:"bytes,3,opt,name=c,proto3" json:"c,omitempty"`
	// schF are the Schnorr proofs of knowledge of the coefficients of the VSS polynomial
	SchF []*Scalar `protobuf:"bytes,4,rep,name=schF,proto3" json:"schF,omitempty"`
}

func (x *Refresh4) Reset() {
	*x = Refresh4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Refresh4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refresh4) ProtoMessage() {}

func (x *Refresh4) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refresh4.ProtoReflect.Descriptor instead.
func (*Refresh4) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *Refresh4) GetMod() *ZKMod {
	if x != nil {
		return x.Mod
	}
	return nil
}

func (x *Refresh4) GetPrm() *ZKPrm {
	if x != nil {
		return x.Prm
	}
	return nil
}

func (x *Refresh4) GetC() *Ciphertext {
	if x != nil {
		return x.C
	}
	return nil
}

func (x *Refresh4) GetSchF() []*Scalar {
	if x != nil {
		return x.SchF
	}
	return nil
}

type Sign1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enc *ZKEnc      `protobuf:"bytes,1,opt,name=enc,proto3" json:"enc,omitempty"`
	K   *Ciphertext `protobuf:"bytes,2,opt,name=K,proto3" json:"K,omitempty"`
	G   *Ciphertext `protobuf:"bytes,3,opt,name=G,proto3" json:"G,omitempty"`
}

func (x *Sign1) Reset() {
	*x = Sign1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sign1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sign1) ProtoMessage() {}

func (x *Sign1) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sign1.ProtoReflect.Descriptor instead.
func (*Sign1) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *Sign1) GetEnc() *ZKEnc {
	if x != nil {
		return x.Enc
	}
	return nil
}

func (x *Sign1) GetK() *Ciphertext {
	if x != nil {
		return x.K
	}
	return nil
}

func (x *Sign1) GetG() *Ciphertext {
	if x != nil {
		return x.G
	}
	return nil
}

type Sign2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashKG       []byte      `protobuf:"bytes,1,opt,name=hashKG,proto3" json:"hashKG,omitempty"`
	Gamma        *Point      `protobuf:"bytes,2,opt,name=Gamma,proto3" json:"Gamma,omitempty"`
	D            *Ciphertext `protobuf:"bytes,3,opt,name=D,proto3" json:"D,omitempty"`
	F            *Ciphertext `protobuf:"bytes,4,opt,name=F,proto3" json:"F,omitempty"`
	DHat         *Ciphertext `protobuf:"bytes,5,opt,name=DHat,proto3" json:"DHat,omitempty"`
	FHat         *Ciphertext `protobuf:"bytes,6,opt,name=FHat,proto3" json:"FHat,omitempty"`
	ProofAffG    *ZKAffG     `protobuf:"bytes,7,opt,name=ProofAffG,proto3" json:"ProofAffG,omitempty"`
	ProofAffGHat *ZKAffG     `protobuf:"bytes,8,opt,name=ProofAffGHat,proto3" json:"ProofAffGHat,omitempty"`
	ProofLog     *ZKLogStar  `protobuf:"bytes,9,opt,name=ProofLog,proto3" json:"ProofLog,omitempty"`
}

func (x *Sign2) Reset() {
	*x = Sign2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sign2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sign2) ProtoMessage() {}

func (x *Sign2) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sign2.ProtoReflect.Descriptor instead.
func (*Sign2) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

func (x *Sign2) GetHashKG() []byte {
	if x != nil {
		return x.HashKG
	}
	return nil
}

func (x *Sign2) GetGamma() *Point {
	if x != nil {
		return x.Gamma
	}
	return nil
}

func (x *Sign2) GetD() *Ciphertext {
	if x != nil {
		return x.D
	}
	return nil
}

func (x *Sign2) GetF() *Ciphertext {
	if x != nil {
		return x.F
	}
	return nil
}

func (x *Sign2) GetDHat() *Ciphertext {
	if x != nil {
		return x.DHat
	}
	return nil
}

func (x *Sign2) GetFHat() *Ciphertext {
	if x != nil {
		return x.FHat
	}
	return nil
}

func (x *Sign2) GetProofAffG() *ZKAffG {
	if x != nil {
		return x.ProofAffG
	}
	return nil
}

func (x *Sign2) GetProofAffGHat() *ZKAffG {
	if x != nil {
		return x.ProofAffGHat
	}
	return nil
}

func (x *Sign2) GetProofLog() *ZKLogStar {
	if x != nil {
		return x.ProofLog
	}
	return nil
}

type Sign3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delta      *Scalar    `protobuf:"bytes,1,opt,name=Delta,proto3" json:"Delta,omitempty"`
	DeltaGroup *Point     `protobuf:"bytes,2,opt,name=DeltaGroup,proto3" json:"DeltaGroup,omitempty"`
	ProofLog   *ZKLogStar `protobuf:"bytes,3,opt,name=ProofLog,proto3" json:"ProofLog,omitempty"`
}

func (x *Sign3) Reset() {
	*x = Sign3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sign3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sign3) ProtoMessage() {}

func (x *Sign3) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sign3.ProtoReflect.Descriptor instead.
func (*Sign3) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

func (x *Sign3) GetDelta() *Scalar {
	if x != nil {
		return x.Delta
	}
	return nil
}

func (x *Sign3) GetDeltaGroup() *Point {
	if x != nil {
		return x.DeltaGroup
	}
	return nil
}

func (x *Sign3) GetProofLog() *ZKLogStar {
	if x != nil {
		return x.ProofLog
	}
	return nil
}

type Sign4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sigma *Scalar `protobuf:"bytes,1,opt,name=Sigma,proto3" json:"Sigma,omitempty"`
}

func (x *Sign4) Reset() {
	*x = Sign4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sign4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sign4) ProtoMessage() {}

func (x *Sign4) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sign4.ProtoReflect.Descriptor instead.
func (*Sign4) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8}
}

func (x *Sign4) GetSigma() *Scalar {
	if x != nil {
		return x.Sigma
	}
	return nil
}

type Abort1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProofAffg map[string]*ZKAffG `protobuf:"bytes,1,rep,name=proofAffg,proto3" json:"proofAffg,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ProofMul  *ZKMul             `protobuf:"bytes,2,opt,name=proofMul,proto3" json:"proofMul,omitempty"`
	ProofDec  map[string]*ZKDec  `protobuf:"bytes,3,rep,name=proofDec,proto3" json:"proofDec,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Abort1) Reset() {
	*x = Abort1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Abort1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Abort1) ProtoMessage() {}

func (x *Abort1) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Abort1.ProtoReflect.Descriptor instead.
func (*Abort1) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{9}
}

func (x *Abort1) GetProofAffg() map[string]*ZKAffG {
	if x != nil {
		return x.ProofAffg
	}
	return nil
}

func (x *Abort1) GetProofMul() *ZKMul {
	if x != nil {
		return x.ProofMul
	}
	return nil
}

func (x *Abort1) GetProofDec() map[string]*ZKDec {
	if x != nil {
		return x.ProofDec
	}
	return nil
}

type Abort2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProofAffg map[string]*ZKAffG    `protobuf:"bytes,1,rep,name=proofAffg,proto3" json:"proofAffg,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ProofMul  map[string]*ZKMulStar `protobuf:"bytes,2,rep,name=proofMul,proto3" json:"proofMul,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ProofDec  map[string]*ZKDec     `protobuf:"bytes,3,rep,name=proofDec,proto3" json:"proofDec,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Abort2) Reset() {
	*x = Abort2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Abort2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Abort2) ProtoMessage() {}

func (x *Abort2) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Abort2.ProtoReflect.Descriptor instead.
func (*Abort2) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10}
}

func (x *Abort2) GetProofAffg() map[string]*ZKAffG {
	if x != nil {
		return x.ProofAffg
	}
	return nil
}

func (x *Abort2) GetProofMul() map[string]*ZKMulStar {
	if x != nil {
		return x.ProofMul
	}
	return nil
}

func (x *Abort2) GetProofDec() map[string]*ZKDec {
	if x != nil {
		return x.ProofDec
	}
	return nil
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x1a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x08, 0x7a, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x03, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x2b, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x52, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x31, 0x52, 0x08, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x31, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x32, 0x52, 0x08, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x32,
	0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x33, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x33,
	0x52, 0x08, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x33, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x34, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x34, 0x52, 0x08, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x34, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x69, 0x67, 0x6e, 0x31, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x31, 0x52, 0x05,
	0x73, 0x69, 0x67, 0x6e, 0x31, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x69, 0x67, 0x6e, 0x32, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x32, 0x52,
	0x05, 0x73, 0x69, 0x67, 0x6e, 0x32, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x69, 0x67, 0x6e, 0x33, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x33,
	0x52, 0x05, 0x73, 0x69, 0x67, 0x6e, 0x33, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x69, 0x67, 0x6e, 0x34,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x34, 0x52, 0x05, 0x73, 0x69, 0x67, 0x6e, 0x34, 0x12, 0x22, 0x0a, 0x06, 0x61, 0x62, 0x6f, 0x72,
	0x74, 0x31, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x62,
	0x6f, 0x72, 0x74, 0x31, 0x52, 0x06, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x31, 0x12, 0x22, 0x0a, 0x06,
	0x61, 0x62, 0x6f, 0x72, 0x74, 0x32, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x32, 0x52, 0x06, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x32,
	0x22, 0x1e, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x31, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x22, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x32, 0x12, 0x22, 0x0a, 0x0c,
	0x68, 0x61, 0x73, 0x68, 0x4f, 0x66, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x68, 0x4f, 0x66, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73,
	0x22, 0xae, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x33, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x68, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x68, 0x6f, 0x12,
	0x24, 0x0a, 0x01, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x6f, 0x6c, 0x79, 0x6e, 0x6f, 0x6d, 0x69, 0x61, 0x6c, 0x45, 0x78, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x52, 0x01, 0x66, 0x12, 0x17, 0x0a, 0x01, 0x41, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x01, 0x41, 0x12, 0x15,
	0x0a, 0x01, 0x4e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x6e, 0x74, 0x52, 0x01, 0x4e, 0x12, 0x15, 0x0a, 0x01, 0x53, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x01, 0x53, 0x12, 0x15, 0x0a, 0x01,
	0x54, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x74,
	0x52, 0x01, 0x54, 0x12, 0x0c, 0x0a, 0x01, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01,
	0x75, 0x22, 0x82, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x34, 0x12, 0x1b,
	0x0a, 0x03, 0x6d, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x5a, 0x4b, 0x4d, 0x6f, 0x64, 0x52, 0x03, 0x6d, 0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x03, 0x70,
	0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x5a, 0x4b,
	0x50, 0x72, 0x6d, 0x52, 0x03, 0x70, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x01, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74,
	0x65, 0x78, 0x74, 0x52, 0x01, 0x63, 0x12, 0x1e, 0x0a, 0x04, 0x73, 0x63, 0x68, 0x46, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72,
	0x52, 0x04, 0x73, 0x63, 0x68, 0x46, 0x22, 0x60, 0x0a, 0x05, 0x53, 0x69, 0x67, 0x6e, 0x31, 0x12,
	0x1b, 0x0a, 0x03, 0x65, 0x6e, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x5a, 0x4b, 0x45, 0x6e, 0x63, 0x52, 0x03, 0x65, 0x6e, 0x63, 0x12, 0x1c, 0x0a, 0x01,
	0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x69, 0x70,
	0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x52, 0x01, 0x4b, 0x12, 0x1c, 0x0a, 0x01, 0x47, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x74, 0x65, 0x78, 0x74, 0x52, 0x01, 0x47, 0x22, 0xc9, 0x02, 0x0a, 0x05, 0x53, 0x69, 0x67,
	0x6e, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x4b, 0x47, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x4b, 0x47, 0x12, 0x1f, 0x0a, 0x05, 0x47, 0x61,
	0x6d, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x12, 0x1c, 0x0a, 0x01, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x52, 0x01, 0x44, 0x12, 0x1c, 0x0a, 0x01, 0x46, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x01, 0x46, 0x12, 0x22, 0x0a, 0x04, 0x44, 0x48, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x74, 0x65, 0x78, 0x74, 0x52, 0x04, 0x44, 0x48, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x46,
	0x48, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x52, 0x04, 0x46, 0x48, 0x61, 0x74, 0x12,
	0x28, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x41, 0x66, 0x66, 0x47, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x5a, 0x4b, 0x41, 0x66, 0x66, 0x47, 0x52, 0x09,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x41, 0x66, 0x66, 0x47, 0x12, 0x2e, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x41, 0x66, 0x66, 0x47, 0x48, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x5a, 0x4b, 0x41, 0x66, 0x66, 0x47, 0x52, 0x0c, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x41, 0x66, 0x66, 0x47, 0x48, 0x61, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x4c, 0x6f, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x5a, 0x4b, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x72, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x4c, 0x6f, 0x67, 0x22, 0x7f, 0x0a, 0x05, 0x53, 0x69, 0x67, 0x6e, 0x33, 0x12, 0x20, 0x0a,
	0x05, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x52, 0x05, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12,
	0x29, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x29, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x4c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x5a, 0x4b, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x72, 0x52, 0x08, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x4c, 0x6f, 0x67, 0x22, 0x29, 0x0a, 0x05, 0x53, 0x69, 0x67, 0x6e, 0x34, 0x12, 0x20,
	0x0a, 0x05, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x52, 0x05, 0x53, 0x69, 0x67, 0x6d, 0x61,
	0x22, 0xb0, 0x02, 0x0a, 0x06, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x31, 0x12, 0x37, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x41, 0x66, 0x66, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x41, 0x66, 0x66, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x41, 0x66, 0x66, 0x67, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x75, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x5a, 0x4b, 0x4d, 0x75,
	0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x75, 0x6c, 0x12, 0x34, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x44, 0x65, 0x63, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x44,
	0x65, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x44, 0x65,
	0x63, 0x1a, 0x48, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x41, 0x66, 0x66, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x5a, 0x4b, 0x41, 0x66, 0x66, 0x47,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x44, 0x65, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x70, 0x62, 0x2e, 0x5a, 0x4b, 0x44, 0x65, 0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x8b, 0x03, 0x0a, 0x06, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x32, 0x12, 0x37,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x41, 0x66, 0x66, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x32, 0x2e, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x41, 0x66, 0x66, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x41, 0x66, 0x66, 0x67, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x4d, 0x75, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x62, 0x6f, 0x72, 0x74, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x75, 0x6c, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x75, 0x6c, 0x12, 0x34, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x44, 0x65, 0x63, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x44, 0x65, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x44, 0x65, 0x63, 0x1a, 0x48, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x41, 0x66, 0x66, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x5a, 0x4b, 0x41, 0x66,
	0x66, 0x47, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4a, 0x0a,
	0x0d, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x75, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x5a, 0x4b, 0x4d, 0x75, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x0d, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x44, 0x65, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x5a, 0x4b, 0x44, 0x65, 0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x2a, 0xc2, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x31, 0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x32, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x33, 0x10, 0x0d, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x34, 0x10, 0x0e, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x31, 0x10, 0x15, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x32, 0x10, 0x16, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x33, 0x10, 0x17, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x34, 0x10, 0x18, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x41, 0x62,
	0x6f, 0x72, 0x74, 0x31, 0x10, 0x1f, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x41, 0x62,
	0x6f, 0x72, 0x74, 0x32, 0x10, 0x20, 0x2a, 0x2e, 0x0a, 0x09, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x42, 0x61, 0x73, 0x69, 0x63, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x10, 0x02, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x61, 0x75, 0x72, 0x75, 0x73, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2f, 0x63, 0x6d, 0x70, 0x2d, 0x65, 0x63, 0x64, 0x73, 0x61, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_message_proto_goTypes = []interface{}{
	(MessageType)(0),           // 0: pb.MessageType
	(Broadcast)(0),             // 1: pb.Broadcast
	(*Message)(nil),            // 2: pb.Message
	(*Refresh1)(nil),           // 3: pb.Refresh1
	(*Refresh2)(nil),           // 4: pb.Refresh2
	(*Refresh3)(nil),           // 5: pb.Refresh3
	(*Refresh4)(nil),           // 6: pb.Refresh4
	(*Sign1)(nil),              // 7: pb.Sign1
	(*Sign2)(nil),              // 8: pb.Sign2
	(*Sign3)(nil),              // 9: pb.Sign3
	(*Sign4)(nil),              // 10: pb.Sign4
	(*Abort1)(nil),             // 11: pb.Abort1
	(*Abort2)(nil),             // 12: pb.Abort2
	nil,                        // 13: pb.Abort1.ProofAffgEntry
	nil,                        // 14: pb.Abort1.ProofDecEntry
	nil,                        // 15: pb.Abort2.ProofAffgEntry
	nil,                        // 16: pb.Abort2.ProofMulEntry
	nil,                        // 17: pb.Abort2.ProofDecEntry
	(*PolynomialExponent)(nil), // 18: pb.PolynomialExponent
	(*Point)(nil),              // 19: pb.Point
	(*Int)(nil),                // 20: pb.Int
	(*ZKMod)(nil),              // 21: pb.ZKMod
	(*ZKPrm)(nil),              // 22: pb.ZKPrm
	(*Ciphertext)(nil),         // 23: pb.Ciphertext
	(*Scalar)(nil),             // 24: pb.Scalar
	(*ZKEnc)(nil),              // 25: pb.ZKEnc
	(*ZKAffG)(nil),             // 26: pb.ZKAffG
	(*ZKLogStar)(nil),          // 27: pb.ZKLogStar
	(*ZKMul)(nil),              // 28: pb.ZKMul
	(*ZKDec)(nil),              // 29: pb.ZKDec
	(*ZKMulStar)(nil),          // 30: pb.ZKMulStar
}
var file_message_proto_depIdxs = []int32{
	0,  // 0: pb.Message.type:type_name -> pb.MessageType
	1,  // 1: pb.Message.broadcast:type_name -> pb.Broadcast
	3,  // 2: pb.Message.refresh1:type_name -> pb.Refresh1
	4,  // 3: pb.Message.refresh2:type_name -> pb.Refresh2
	5,  // 4: pb.Message.refresh3:type_name -> pb.Refresh3
	6,  // 5: pb.Message.refresh4:type_name -> pb.Refresh4
	7,  // 6: pb.Message.sign1:type_name -> pb.Sign1
	8,  // 7: pb.Message.sign2:type_name -> pb.Sign2
	9,  // 8: pb.Message.sign3:type_name -> pb.Sign3
	10, // 9: pb.Message.sign4:type_name -> pb.Sign4
	11, // 10: pb.Message.abort1:type_name -> pb.Abort1
	12, // 11: pb.Message.abort2:type_name -> pb.Abort2
	18, // 12: pb.Refresh3.f:type_name -> pb.PolynomialExponent
	19, // 13: pb.Refresh3.A:type_name -> pb.Point
	20, // 14: pb.Refresh3.N:type_name -> pb.Int
	20, // 15: pb.Refresh3.S:type_name -> pb.Int
	20, // 16: pb.Refresh3.T:type_name -> pb.Int
	21, // 17: pb.Refresh4.mod:type_name -> pb.ZKMod
	22, // 18: pb.Refresh4.prm:type_name -> pb.ZKPrm
	23, // 19: pb.Refresh4.c:type_name -> pb.Ciphertext
	24, // 20: pb.Refresh4.schF:type_name -> pb.Scalar
	25, // 21: pb.Sign1.enc:type_name -> pb.ZKEnc
	23, // 22: pb.Sign1.K:type_name -> pb.Ciphertext
	23, // 23: pb.Sign1.G:type_name -> pb.Ciphertext
	19, // 24: pb.Sign2.Gamma:type_name -> pb.Point
	23, // 25: pb.Sign2.D:type_name -> pb.Ciphertext
	23, // 26: pb.Sign2.F:type_name -> pb.Ciphertext
	23, // 27: pb.Sign2.DHat:type_name -> pb.Ciphertext
	23, // 28: pb.Sign2.FHat:type_name -> pb.Ciphertext
	26, // 29: pb.Sign2.ProofAffG:type_name -> pb.ZKAffG
	26, // 30: pb.Sign2.ProofAffGHat:type_name -> pb.ZKAffG
	27, // 31: pb.Sign2.ProofLog:type_name -> pb.ZKLogStar
	24, // 32: pb.Sign3.Delta:type_name -> pb.Scalar
	19, // 33: pb.Sign3.DeltaGroup:type_name -> pb.Point
	27, // 34: pb.Sign3.ProofLog:type_name -> pb.ZKLogStar
	24, // 35: pb.Sign4.Sigma:type_name -> pb.Scalar
	13, // 36: pb.Abort1.proofAffg:type_name -> pb.Abort1.ProofAffgEntry
	28, // 37: pb.Abort1.proofMul:type_name -> pb.ZKMul
	14, // 38: pb.Abort1.proofDec:type_name -> pb.Abort1.ProofDecEntry
	15, // 39: pb.Abort2.proofAffg:type_name -> pb.Abort2.ProofAffgEntry
	16, // 40: pb.Abort2.proofMul:type_name -> pb.Abort2.ProofMulEntry
	17, // 41: pb.Abort2.proofDec:type_name -> pb.Abort2.ProofDecEntry
	26, // 42: pb.Abort1.ProofAffgEntry.value:type_name -> pb.ZKAffG
	29, // 43: pb.Abort1.ProofDecEntry.value:type_name -> pb.ZKDec
	26, // 44: pb.Abort2.ProofAffgEntry.value:type_name -> pb.ZKAffG
	30, // 45: pb.Abort2.ProofMulEntry.value:type_name -> pb.ZKMulStar
	29, // 46: pb.Abort2.ProofDecEntry.value:type_name -> pb.ZKDec
	47, // [47:47] is the sub-list for method output_type
	47, // [47:47] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	file_types_proto_init()
	file_zk_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Refresh1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Refresh2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Refresh3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Refresh4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sign1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sign2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sign3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sign4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Abort1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Abort2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		EnumInfos:         file_message_proto_enumTypes,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
